{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk'\n\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './root-reducer'; // SAGAS\n\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n  traceLimit: 25\n});\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store); // export default { store, persistStore }","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","composeWithDevTools","rootReducer","rootSaga","sagaMiddleware","middleware","process","env","NODE_ENV","push","composeEnhancers","trace","traceLimit","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACD;;AAED,MAAMW,gBAAgB,GAAGT,mBAAmB,CAAC;AAC3CU,EAAAA,KAAK,EAAE,IADoC;AAE3CC,EAAAA,UAAU,EAAE;AAF+B,CAAD,CAA5C;AAIA,OAAO,MAAMC,KAAK,GAAGjB,WAAW,CAC9BM,WAD8B,EAE9BQ,gBAAgB,CAACb,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAFc,CAAzB;AAKPD,cAAc,CAACU,GAAf,CAAmBX,QAAnB;AAEA,OAAO,MAAMY,SAAS,GAAGjB,YAAY,CAACe,KAAD,CAA9B,C,CAEP","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\n// import thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './root-reducer'\n\n// SAGAS\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middleware = [sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger)\n}\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n  traceLimit: 25,\n})\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n\n// export default { store, persistStore }\n"]},"metadata":{},"sourceType":"module"}