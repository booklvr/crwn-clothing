{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, {\n  quantity\n}) => accumulatedQuantity + quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, {\n  quantity,\n  price\n}) => accumulatedQuantity + quantity * price, 0));","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,YAAY,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAAUA,IAAI,CAACI,MAA9B,CAAnC;AAEP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsB;AAAEC,EAAAA;AAAF,CAAtB,KAAuCD,mBAAmB,GAAGC,QAD/D,EAEE,CAFF,CAH8C,CAA3C;AASP,OAAO,MAAMC,eAAe,GAAGZ,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsB;AAAEC,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAtB,KACEH,mBAAmB,GAAGC,QAAQ,GAAGE,KAFrC,EAGE,CAHF,CAD2C,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectCart = (state) => state.cart\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n)\n\nexport const selectHidden = createSelector([selectCart], (cart) => cart.hidden)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, { quantity }) => accumulatedQuantity + quantity,\n      0\n    )\n)\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce(\n    (accumulatedQuantity, { quantity, price }) =>\n      accumulatedQuantity + quantity * price,\n    0\n  )\n)\n"]},"metadata":{},"sourceType":"module"}