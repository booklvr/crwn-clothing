{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects'; // UTILS\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInFailure, SignInSuccess } from './user.actions'; // CONSTANTS\n\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.constants';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","SignInFailure","SignInSuccess","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","signInSuccess","id","data","error","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signInFailure","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C,C,CAEA;;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP,C,CAKA;;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMX,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACPgB,aAAa,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACM,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMrB,UAAU,CAACU,oBAAD,EAAuBC,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMX,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACPgB,aAAa,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAAC0B,aAAa,CAACP,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACS,mBAAD,EAAsBa,eAAtB,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\n// UTILS\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from '../../firebase/firebase.utils'\nimport {\n  SignInFailure,\n  SignInSuccess,\n} from './user.actions'\n\n// CONSTANTS\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.constants'\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(SignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}