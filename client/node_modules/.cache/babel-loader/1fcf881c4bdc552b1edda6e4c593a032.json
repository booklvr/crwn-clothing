{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects'; // UTILS\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSuccess } from './user.actions'; // CONSTANTS\n\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.constants';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {} catch (error) {\n    yield put();\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInFailure","googleSignInSuccess","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","signInWithEmail","payload","email","password","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C,C,CAEA;;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMX,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACPO,mBAAmB,CAAC;AAAES,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACM,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMpB,UAAU,CAACU,oBAAD,EAAuBC,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUU,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI,CAEH,CAFD,CAEE,OAAOL,KAAP,EAAc;AACd,UAAMlB,GAAG,EAAT;AACD;AACF;AAED,OAAO,UAAUwB,kBAAV,GAA+B;AACpC,QAAMzB,UAAU,CAACS,mBAAD,EAAsBY,eAAtB,CAAhB;AACD;AAED,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACiB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\n// UTILS\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from '../../firebase/firebase.utils'\nimport { googleSignInFailure, googleSignInSuccess } from './user.actions'\n\n// CONSTANTS\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.constants'\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    \n  } catch (error) {\n    yield put()\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}