{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects'; // CONSTANTS\n\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START, SIGN_OUT_START, SIGN_UP_START, SIGN_UP_SUCCESS } from './user.constants'; // UTILS\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'; // ACTIONS\n\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","CHECK_USER_SESSION","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","SIGN_OUT_START","SIGN_UP_START","SIGN_UP_SUCCESS","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","isUserAuthenticated","onCheckUserSession","signOut","onSignOutStart","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","signInAfterSignUp","onSignUpSuccess","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\n// CONSTANTS\nimport {\n  CHECK_USER_SESSION,\n  EMAIL_SIGN_IN_START,\n  GOOGLE_SIGN_IN_START,\n  SIGN_OUT_START,\n  SIGN_UP_START,\n  SIGN_UP_SUCCESS,\n} from './user.constants'\n\n// UTILS\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase.utils'\n\n// ACTIONS\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess,\n} from './user.actions'\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    )\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return\n    yield getSnapshotFromUserAuth(userAuth)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch (error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut)\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n    yield put(signUpSuccess({ user, additionalData: { displayName } }))\n  } catch (error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp)\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}