{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { FETCH_COLLECTIONS_FAILURE, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from './shop.constants';\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","FETCH_COLLECTIONS_FAILURE","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SACEA,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,yBADF,EAEEC,uBAFF,EAGEC,yBAHF,QAIO,kBAJP;AAMA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEH;AADoC,CAAP,CAA9B;AAIP,OAAO,MAAMI,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DF,EAAAA,IAAI,EAAEF,yBADoD;AAE1DK,EAAAA,OAAO,EAAED;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAME,uBAAuB,GAAIC,YAAD,KAAmB;AACxDL,EAAAA,IAAI,EAAEJ,yBADkD;AAExDO,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMV,cAAc,GAAGP,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGW,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\nimport {\n  FETCH_COLLECTIONS_FAILURE,\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n} from './shop.constants'\n\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n    dispatch(fetchCollectionsStart())\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}