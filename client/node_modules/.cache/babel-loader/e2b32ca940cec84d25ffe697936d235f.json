{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/pages/shopPage/ShopPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // PAGES\n\nimport CollectionPage from '../collectionPage/CollectionPage'; // COMPONENTS\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport WithSpinner from '../../components/with-spinner/WithSpinner'; // ACTIONS\n\nimport { updateCollections } from '../../redux/shop/shop.actions'; // UTILS\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nconst ShopPage = ({\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollections(collectionsMap));\n      setLoading(false);\n    }); // const unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapshot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //     dispatch(updateCollections(collectionsMap))\n    //     setLoading(false)\n    //   }\n    // )\n    // return unsubscribeFromSnapshot\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n        isLoading: loading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n        isLoading: loading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"vtoOoDC9IbnW7SYXL4Tit6/KMUU=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = ShopPage;\nexport default ShopPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");\n$RefreshReg$(_c3, \"ShopPage\");","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/pages/shopPage/ShopPage.jsx"],"names":["React","useEffect","useState","Route","useDispatch","CollectionPage","CollectionsOverview","WithSpinner","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","dispatch","loading","setLoading","collectionRef","collection","get","then","snapshot","collectionsMap","path","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,kCAA3B,C,CAEA;;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,WAAP,MAAwB,2CAAxB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,+BAAlC,C,CAEA;;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;AAKA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACD,mBAAD,CAAjD;KAAMK,6B;AACN,MAAMC,yBAAyB,GAAGL,WAAW,CAACF,cAAD,CAA7C;MAAMO,yB;;AAEN,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC9B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAACP,iBAAiB,CAACe,cAAD,CAAlB,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,EAHc,CAQd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAhBQ,EAgBN,CAACF,QAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACU,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGC,KAAD,iBACN,QAAC,6BAAD;AAA+B,QAAA,SAAS,EAAET,OAA1C;AAAA,WAAuDS;AAAvD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGC,KAAD,iBACN,QAAC,yBAAD;AAA2B,QAAA,SAAS,EAAET,OAAtC;AAAA,WAAmDS;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCD;;GAAMZ,Q;UACaT,W;;;MADbS,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\n// PAGES\nimport CollectionPage from '../collectionPage/CollectionPage'\n\n// COMPONENTS\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\nimport WithSpinner from '../../components/with-spinner/WithSpinner'\n\n// ACTIONS\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\n// UTILS\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nconst ShopPage = ({ match }) => {\n  const dispatch = useDispatch()\n\n  const [loading, setLoading] = useState(true)\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      dispatch(updateCollections(collectionsMap))\n      setLoading(false)\n    })\n    // const unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapshot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //     dispatch(updateCollections(collectionsMap))\n    //     setLoading(false)\n    //   }\n    // )\n    // return unsubscribeFromSnapshot\n  }, [dispatch])\n\n  return (\n    <div className='shop-page'>\n      <Route\n        exact\n        path={`${match.path}`}\n        render={(props) => (\n          <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={(props) => (\n          <CollectionPageWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default ShopPage\n"]},"metadata":{},"sourceType":"module"}