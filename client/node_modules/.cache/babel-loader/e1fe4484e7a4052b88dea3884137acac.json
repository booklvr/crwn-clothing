{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects'; // CONSTANTS\n\nimport { FETCH_COLLECTIONS_START } from './shop.constants'; // UTILS\n\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils'; // ACTIONS\n\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/nicholasdewaal/Documents/code/udemy/complete-react-developer-in-2021/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","FETCH_COLLECTIONS_START","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,kBAAxC,C,CAEA;;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP,C,CAKA;;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CAACC,uBAAD,EAA0BK,qBAA1B,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\n// CONSTANTS\nimport { FETCH_COLLECTIONS_START } from './shop.constants'\n\n// UTILS\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from '../../firebase/firebase.utils'\n\n// ACTIONS\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from './shop.actions'\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef.get()\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    yield put(fetchCollectionsSuccess(collectionsMap))\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message))\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n"]},"metadata":{},"sourceType":"module"}